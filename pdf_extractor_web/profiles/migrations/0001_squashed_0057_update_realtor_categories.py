# Generated by Django 5.2 on 2025-04-18 01:37

import django.db.models.deletion
import uuid
from django.db import migrations, models


# Functions from the following migrations need manual copying.
# Move them and any dependencies into this file, then update the
# RunPython operations to refer to the local versions:
# profiles.migrations.0027_fix_transaction_fields
# profiles.migrations.0033_add_irs_6a_categories
# profiles.migrations.0033_migrate_businessprofile_data
# profiles.migrations.0038_remove_other_expenses_category
# profiles.migrations.0047_reset_processing_methods
# profiles.migrations.0048_fix_processing_methods
# profiles.migrations.0052_alter_classificationoverride_options_and_more
# profiles.migrations.0057_update_realtor_categories

class Migration(migrations.Migration):

    replaces = [('profiles', '0001_initial'), ('profiles', '0027_fix_transaction_fields'), ('profiles', '0028_rename_custom_6A_expense_categories'), ('profiles', '0029_update_businessprofile_fields'), ('profiles', '0028_add_agent_fields'), ('profiles', '0030_merge_20250412_0320'), ('profiles', '0031_transaction_classification'), ('profiles', '0033_migrate_businessprofile_data'), ('profiles', '0032_create_irs_models'), ('profiles', '0033_add_irs_6a_categories'), ('profiles', '0034_merge_migrations'), ('profiles', '0035_businessprofile_unique'), ('profiles', '0036_cleanup_businessprofile'), ('profiles', '0037_businessexpensecategory'), ('profiles', '0038_combined_model_updates'), ('profiles', '0002_transaction_classification_method_and_more'), ('profiles', '0039_merge_20250416_0051'), ('profiles', '0040_fix_classification_model'), ('profiles', '0038_remove_other_expenses_category'), ('profiles', '0041_merge_20250416_2321'), ('profiles', '0042_add_payee_reasoning'), ('profiles', '0043_auto_20250416_2358'), ('profiles', '0046_add_payee_field'), ('profiles', '0047_reset_processing_methods'), ('profiles', '0048_fix_processing_methods'), ('profiles', '0049_add_processing_task'), ('profiles', '0050_add_transaction_fields'), ('profiles', '0051_create_classificationoverride'), ('profiles', '0052_alter_classificationoverride_options_and_more'), ('profiles', '0053_rename_custom_6a_categories_to_additional_info'), ('profiles', '0053_merge_20250418_0059'), ('profiles', '0054_add_normalized_description'), ('profiles', '0055_add_missing_transaction_fields'), ('profiles', '0057_update_realtor_categories')]

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BusinessProfile',
            fields=[
                ('client_id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('business_type', models.TextField(blank=True, null=True)),
                ('business_description', models.TextField(blank=True, null=True)),
                ('contact_info', models.TextField(blank=True, null=True)),
                ('common_business_expenses', models.TextField(blank=True, null=True)),
                ('custom_6A_expense_categories', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='LLMConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(max_length=255)),
                ('model', models.CharField(max_length=255, unique=True)),
                ('url', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tool',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('module_path', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('purpose', models.TextField()),
                ('prompt', models.TextField()),
                ('llm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agents', to='profiles.llmconfig')),
                ('tools', models.ManyToManyField(blank=True, related_name='agents', to='profiles.tool')),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_date', models.DateField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.TextField()),
                ('category', models.CharField(blank=True, max_length=255, null=True)),
                ('parsed_data', models.JSONField(blank=True, default=dict)),
                ('file_path', models.CharField(blank=True, max_length=255, null=True)),
                ('source', models.CharField(blank=True, max_length=255, null=True)),
                ('transaction_type', models.CharField(blank=True, max_length=50, null=True)),
                ('normalized_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('statement_start_date', models.DateField(blank=True, null=True)),
                ('statement_end_date', models.DateField(blank=True, null=True)),
                ('account_number', models.CharField(blank=True, max_length=50, null=True)),
                ('transaction_id', models.IntegerField(null=True, unique=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='profiles.businessprofile')),
            ],
        ),
        migrations.CreateModel(
            name='NormalizedVendorData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('normalized_name', models.CharField(max_length=255)),
                ('normalized_description', models.TextField(blank=True, null=True)),
                ('justification', models.TextField(blank=True, null=True)),
                ('confidence', models.DecimalField(decimal_places=2, max_digits=5)),
                ('transaction', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='normalized_data', to='profiles.transaction')),
            ],
        ),
        migrations.CreateModel(
            name='ClientExpenseCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=255)),
                ('category_type', models.CharField(choices=[('other_expense', 'Other Expense'), ('custom_category', 'Custom Category')], max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('tax_year', models.IntegerField()),
                ('worksheet', models.CharField(choices=[('6A', '6A'), ('Auto', 'Auto'), ('HomeOffice', 'HomeOffice'), ('Personal', 'Personal'), ('None', 'None')], max_length=50)),
                ('parent_category', models.CharField(blank=True, max_length=255, null=True)),
                ('line_number', models.CharField(blank=True, max_length=50, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expense_categories', to='profiles.businessprofile')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('client', 'category_name', 'tax_year'), name='unique_client_category_year')],
            },
        ),
        migrations.AddConstraint(
            model_name='transaction',
            constraint=models.UniqueConstraint(fields=('client', 'transaction_id'), name='unique_transaction'),
        ),
        migrations.RunPython(
            code=lambda apps, schema_editor: None,  # Placeholder for now
            reverse_code=lambda apps, schema_editor: None,
        ),
        migrations.RunSQL(
            sql='ALTER TABLE profiles_businessprofile RENAME COLUMN "custom_6A_expense_categories" TO "custom_6a_expense_categories";',
            reverse_sql='ALTER TABLE profiles_businessprofile RENAME COLUMN "custom_6a_expense_categories" TO "custom_6A_expense_categories";',
        ),
        migrations.SeparateDatabaseAndState(
            state_operations=[
                migrations.AddField(
                    model_name='businessprofile',
                    name='common_expenses',
                    field=models.JSONField(default=dict),
                ),
                migrations.AddField(
                    model_name='businessprofile',
                    name='custom_6a_categories',
                    field=models.JSONField(default=dict),
                ),
                migrations.AddField(
                    model_name='businessprofile',
                    name='industry_keywords',
                    field=models.JSONField(default=dict),
                ),
                migrations.AddField(
                    model_name='businessprofile',
                    name='category_patterns',
                    field=models.JSONField(default=dict),
                ),
                migrations.AddField(
                    model_name='businessprofile',
                    name='profile_data',
                    field=models.JSONField(default=dict),
                ),
                migrations.AddField(
                    model_name='businessprofile',
                    name='generated_profile',
                    field=models.BooleanField(default=False),
                ),
                migrations.AddField(
                    model_name='businessprofile',
                    name='location',
                    field=models.CharField(blank=True, max_length=200, null=True),
                ),
            ],
        ),
        migrations.AddField(
            model_name='transaction',
            name='normalized_description',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='transaction',
            name='payee',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='transaction',
            name='confidence',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='transaction',
            name='reasoning',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='transaction',
            name='business_context',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='transaction',
            name='questions',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='transaction',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.CreateModel(
            name='TransactionClassification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classification_type', models.CharField(help_text="Type of classification (e.g., 'business', 'personal')", max_length=50)),
                ('worksheet', models.CharField(help_text="Tax worksheet category (e.g., '6A', 'Auto', 'HomeOffice')", max_length=50)),
                ('confidence', models.CharField(help_text='Confidence level of the classification', max_length=20)),
                ('reasoning', models.TextField(help_text='Explanation for the classification decision')),
                ('created_by', models.CharField(help_text='Agent or user who created this classification', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this is the current active classification')),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='classifications', to='profiles.transaction')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['transaction', 'created_at'], name='profiles_tr_transac_0e6ed3_idx'), models.Index(fields=['transaction', 'is_active'], name='profiles_tr_transac_2c9442_idx'), models.Index(fields=['classification_type'], name='profiles_tr_classif_1458d9_idx'), models.Index(fields=['worksheet'], name='profiles_tr_workshe_d85d76_idx')],
            },
        ),
        migrations.CreateModel(
            name='IRSWorksheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='IRSExpenseCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('line_number', models.CharField(help_text='Line number on the IRS form', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('worksheet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='profiles.irsworksheet')),
            ],
            options={
                'ordering': ['worksheet', 'line_number'],
                'unique_together': {('worksheet', 'name')},
            },
        ),
        migrations.RunPython(
            code=profiles.migrations.0033_migrate_businessprofile_data.migrate_data,
            reverse_code=profiles.migrations.0033_migrate_businessprofile_data.reverse_migrate,
        ),
        migrations.CreateModel(
            name='IRSWorksheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'IRS Worksheet',
                'verbose_name_plural': 'IRS Worksheets',
            },
        ),
        migrations.CreateModel(
            name='IRSExpenseCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('line_number', models.CharField(max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('worksheet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expense_categories', to='profiles.irsworksheet')),
            ],
            options={
                'verbose_name': 'IRS Expense Category',
                'verbose_name_plural': 'IRS Expense Categories',
                'unique_together': {('worksheet', 'name')},
            },
        ),
        migrations.RunPython(
            code=profiles.migrations.0033_add_irs_6a_categories.add_6a_categories,
            reverse_code=profiles.migrations.0033_add_irs_6a_categories.remove_6a_categories,
        ),
        migrations.RunSQL(
            sql='\n            ALTER TABLE profiles_businessprofile\n            ADD CONSTRAINT profiles_businessprofile_client_id_key UNIQUE (client_id);\n            ',
            reverse_sql='\n            ALTER TABLE profiles_businessprofile\n            DROP CONSTRAINT IF EXISTS profiles_businessprofile_client_id_key;\n            ',
        ),
        migrations.RunSQL(
            sql='\n            -- Drop foreign key constraints\n            ALTER TABLE profiles_clientexpensecategory\n            DROP CONSTRAINT IF EXISTS profiles_clientexpen_client_id_3aab47cd_fk_profiles_;\n\n            ALTER TABLE profiles_transaction\n            DROP CONSTRAINT IF EXISTS profiles_transaction_client_id_117e8684_fk_profiles_;\n\n            ALTER TABLE profiles_processingtask\n            DROP CONSTRAINT IF EXISTS profiles_processingt_client_id_134d18bd_fk_profiles_;\n\n            -- Drop any existing constraints on BusinessProfile\n            ALTER TABLE profiles_businessprofile\n            DROP CONSTRAINT IF EXISTS profiles_businessprofile_pkey;\n            \n            ALTER TABLE profiles_businessprofile\n            DROP CONSTRAINT IF EXISTS profiles_businessprofile_client_id_key;\n            \n            -- Add the primary key constraint\n            ALTER TABLE profiles_businessprofile\n            ADD PRIMARY KEY (client_id);\n\n            -- Recreate foreign key constraints\n            ALTER TABLE profiles_clientexpensecategory\n            ADD CONSTRAINT profiles_clientexpen_client_id_3aab47cd_fk_profiles_\n            FOREIGN KEY (client_id) REFERENCES profiles_businessprofile(client_id)\n            ON DELETE CASCADE;\n\n            ALTER TABLE profiles_transaction\n            ADD CONSTRAINT profiles_transaction_client_id_117e8684_fk_profiles_\n            FOREIGN KEY (client_id) REFERENCES profiles_businessprofile(client_id)\n            ON DELETE CASCADE;\n\n            ALTER TABLE profiles_processingtask\n            ADD CONSTRAINT profiles_processingt_client_id_134d18bd_fk_profiles_\n            FOREIGN KEY (client_id) REFERENCES profiles_businessprofile(client_id)\n            ON DELETE CASCADE;\n            ',
            reverse_sql='\n            -- Drop foreign key constraints\n            ALTER TABLE profiles_clientexpensecategory\n            DROP CONSTRAINT IF EXISTS profiles_clientexpen_client_id_3aab47cd_fk_profiles_;\n\n            ALTER TABLE profiles_transaction\n            DROP CONSTRAINT IF EXISTS profiles_transaction_client_id_117e8684_fk_profiles_;\n\n            ALTER TABLE profiles_processingtask\n            DROP CONSTRAINT IF EXISTS profiles_processingt_client_id_134d18bd_fk_profiles_;\n\n            -- Drop primary key constraint\n            ALTER TABLE profiles_businessprofile\n            DROP CONSTRAINT IF EXISTS profiles_businessprofile_pkey;\n\n            -- Recreate foreign key constraints with old primary key\n            ALTER TABLE profiles_clientexpensecategory\n            ADD CONSTRAINT profiles_clientexpen_client_id_3aab47cd_fk_profiles_\n            FOREIGN KEY (client_id) REFERENCES profiles_businessprofile(id)\n            ON DELETE CASCADE;\n\n            ALTER TABLE profiles_transaction\n            ADD CONSTRAINT profiles_transaction_client_id_117e8684_fk_profiles_\n            FOREIGN KEY (client_id) REFERENCES profiles_businessprofile(id)\n            ON DELETE CASCADE;\n\n            ALTER TABLE profiles_processingtask\n            ADD CONSTRAINT profiles_processingt_client_id_134d18bd_fk_profiles_\n            FOREIGN KEY (client_id) REFERENCES profiles_businessprofile(id)\n            ON DELETE CASCADE;\n            ',
        ),
        migrations.CreateModel(
            name='BusinessExpenseCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('tax_year', models.IntegerField(help_text='Tax year this category applies to')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='business_expense_categories', to='profiles.businessprofile')),
                ('parent_category', models.ForeignKey(blank=True, help_text="The IRS category this maps to (e.g., 'Other Expenses' on 6A)", null=True, on_delete=django.db.models.deletion.SET_NULL, to='profiles.irsexpensecategory')),
                ('worksheet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='business_categories', to='profiles.irsworksheet')),
            ],
            options={
                'verbose_name_plural': 'Business Expense Categories',
                'unique_together': {('business', 'category_name')},
            },
        ),
        migrations.AlterModelOptions(
            name='transaction',
            options={'ordering': ['-date']},
        ),
        migrations.RunSQL(
            sql="\n            DO $$\n            BEGIN\n                IF NOT EXISTS (\n                    SELECT 1 FROM information_schema.tables \n                    WHERE table_name = 'profiles_classificationoverride'\n                ) THEN\n                    CREATE TABLE profiles_classificationoverride (\n                        id bigserial NOT NULL PRIMARY KEY,\n                        created_at timestamp with time zone NOT NULL,\n                        updated_at timestamp with time zone NOT NULL,\n                        classification_type varchar(20) NOT NULL,\n                        worksheet varchar(20) NOT NULL,\n                        reasoning text NOT NULL,\n                        transaction_id bigint NOT NULL REFERENCES profiles_transaction(id) ON DELETE CASCADE\n                    );\n\n                    CREATE INDEX profiles_classificationoverride_transaction_id_idx\n                    ON profiles_classificationoverride(transaction_id);\n\n                    ALTER TABLE profiles_classificationoverride\n                    ADD CONSTRAINT profiles_classificationoverride_transaction_id_key\n                    UNIQUE (transaction_id);\n                END IF;\n            END $$;\n            ",
            reverse_sql='\n            DROP TABLE IF EXISTS profiles_classificationoverride;\n            ',
        ),
        migrations.AddField(
            model_name='transaction',
            name='classification_method',
            field=models.CharField(choices=[('AI', 'AI Classification'), ('Human', 'Human Override')], default='AI', help_text='Method used to classify the transaction', max_length=20),
        ),
        migrations.AddField(
            model_name='transaction',
            name='payee_extraction_method',
            field=models.CharField(choices=[('AI', 'AI Only'), ('AI+Search', 'AI with Search'), ('Human', 'Human Override')], default='AI', help_text='Method used to extract the payee information', max_length=20),
        ),
        migrations.RunSQL(
            sql="\n                DO $$\n                BEGIN\n                    IF EXISTS (\n                        SELECT 1 FROM information_schema.tables \n                        WHERE table_name = 'profiles_classificationoverride'\n                    ) THEN\n                        ALTER TABLE profiles_classificationoverride \n                        DROP COLUMN IF EXISTS original_classification_id;\n                    END IF;\n                END $$;\n            ",
            reverse_sql="\n                DO $$\n                BEGIN\n                    IF EXISTS (\n                        SELECT 1 FROM information_schema.tables \n                        WHERE table_name = 'profiles_classificationoverride'\n                    ) AND NOT EXISTS (\n                        SELECT 1 FROM information_schema.columns \n                        WHERE table_name = 'profiles_classificationoverride' \n                        AND column_name = 'original_classification_id'\n                    ) THEN\n                        ALTER TABLE profiles_classificationoverride \n                        ADD COLUMN original_classification_id integer \n                        REFERENCES profiles_transactionclassification(id) \n                        ON DELETE CASCADE;\n                    END IF;\n                END $$;\n            ",
        ),
        migrations.RunSQL(
            sql="\n                DO $$\n                BEGIN\n                    IF EXISTS (\n                        SELECT 1 FROM information_schema.tables \n                        WHERE table_name = 'profiles_transactionclassification'\n                    ) THEN\n                        DROP TABLE profiles_transactionclassification CASCADE;\n                    END IF;\n                END $$;\n            ",
            reverse_sql='\n                -- No reverse SQL needed as the model will be recreated by Django\n            ',
        ),
        migrations.RunSQL(
            sql="\n                DO $$\n                BEGIN\n                    IF NOT EXISTS (\n                        SELECT 1 FROM information_schema.columns \n                        WHERE table_name = 'profiles_transaction' \n                        AND column_name = 'classification_type'\n                    ) THEN\n                        ALTER TABLE profiles_transaction \n                        ADD COLUMN classification_type varchar(50) NULL;\n                    END IF;\n\n                    IF NOT EXISTS (\n                        SELECT 1 FROM information_schema.columns \n                        WHERE table_name = 'profiles_transaction' \n                        AND column_name = 'worksheet'\n                    ) THEN\n                        ALTER TABLE profiles_transaction \n                        ADD COLUMN worksheet varchar(50) NULL;\n                    END IF;\n\n                    IF NOT EXISTS (\n                        SELECT 1 FROM information_schema.columns \n                        WHERE table_name = 'profiles_transaction' \n                        AND column_name = 'business_percentage'\n                    ) THEN\n                        ALTER TABLE profiles_transaction \n                        ADD COLUMN business_percentage integer NOT NULL DEFAULT 100;\n                    END IF;\n\n                    IF NOT EXISTS (\n                        SELECT 1 FROM information_schema.columns \n                        WHERE table_name = 'profiles_transaction' \n                        AND column_name = 'classification_method'\n                    ) THEN\n                        ALTER TABLE profiles_transaction \n                        ADD COLUMN classification_method varchar(50) NULL;\n                    END IF;\n\n                    IF NOT EXISTS (\n                        SELECT 1 FROM information_schema.columns \n                        WHERE table_name = 'profiles_transaction' \n                        AND column_name = 'payee_extraction_method'\n                    ) THEN\n                        ALTER TABLE profiles_transaction \n                        ADD COLUMN payee_extraction_method varchar(50) NULL;\n                    END IF;\n                END $$;\n            ",
            reverse_sql='\n                ALTER TABLE profiles_transaction \n                DROP COLUMN IF EXISTS classification_type,\n                DROP COLUMN IF EXISTS worksheet,\n                DROP COLUMN IF EXISTS business_percentage,\n                DROP COLUMN IF EXISTS classification_method,\n                DROP COLUMN IF EXISTS payee_extraction_method;\n            ',
        ),
        migrations.RunPython(
            code=profiles.migrations.0038_remove_other_expenses_category.remove_other_expenses_category,
        ),
        migrations.AddField(
            model_name='transaction',
            name='payee_reasoning',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='transaction',
            name='payee_extraction_method',
            field=models.CharField(blank=True, choices=[('AI', 'AI Only'), ('AI+Search', 'AI with Search'), ('Human', 'Human Override'), ('None', 'Not Processed')], default=None, help_text='Method used to extract the payee information', max_length=20, null=True),
        ),
        migrations.AlterField(
            model_name='transaction',
            name='classification_method',
            field=models.CharField(blank=True, choices=[('AI', 'AI Classification'), ('Human', 'Human Override'), ('None', 'Not Processed')], default=None, help_text='Method used to classify the transaction', max_length=20, null=True),
        ),
        migrations.RunSQL(
            sql="\n            DO $$\n            BEGIN\n                IF NOT EXISTS (\n                    SELECT 1 FROM information_schema.columns \n                    WHERE table_name = 'profiles_transaction' \n                    AND column_name = 'business_percentage'\n                ) THEN\n                    ALTER TABLE profiles_transaction\n                    ADD COLUMN business_percentage integer DEFAULT 100 NULL;\n                END IF;\n\n                IF NOT EXISTS (\n                    SELECT 1 FROM information_schema.columns \n                    WHERE table_name = 'profiles_transaction' \n                    AND column_name = 'classification_type'\n                ) THEN\n                    ALTER TABLE profiles_transaction\n                    ADD COLUMN classification_type varchar(50) NULL;\n                END IF;\n\n                IF NOT EXISTS (\n                    SELECT 1 FROM information_schema.columns \n                    WHERE table_name = 'profiles_transaction' \n                    AND column_name = 'worksheet'\n                ) THEN\n                    ALTER TABLE profiles_transaction\n                    ADD COLUMN worksheet varchar(50) NULL;\n                END IF;\n\n                -- Update classification_method field\n                ALTER TABLE profiles_transaction\n                ALTER COLUMN classification_method TYPE varchar(20),\n                ALTER COLUMN classification_method DROP NOT NULL,\n                ALTER COLUMN classification_method SET DEFAULT NULL;\n\n                -- Update payee_extraction_method field\n                ALTER TABLE profiles_transaction\n                ALTER COLUMN payee_extraction_method TYPE varchar(20),\n                ALTER COLUMN payee_extraction_method DROP NOT NULL,\n                ALTER COLUMN payee_extraction_method SET DEFAULT NULL;\n            END $$;\n            ",
            reverse_sql='\n            ALTER TABLE profiles_transaction\n            DROP COLUMN IF EXISTS business_percentage,\n            DROP COLUMN IF EXISTS classification_type,\n            DROP COLUMN IF EXISTS worksheet;\n\n            ALTER TABLE profiles_transaction\n            ALTER COLUMN classification_method SET NOT NULL,\n            ALTER COLUMN classification_method DROP DEFAULT;\n\n            ALTER TABLE profiles_transaction\n            ALTER COLUMN payee_extraction_method SET NOT NULL,\n            ALTER COLUMN payee_extraction_method DROP DEFAULT;\n            ',
        ),
        migrations.AddField(
            model_name='transaction',
            name='payee',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.RunPython(
            code=profiles.migrations.0047_reset_processing_methods.reset_processing_methods,
        ),
        migrations.RunPython(
            code=profiles.migrations.0048_fix_processing_methods.fix_processing_methods,
        ),
        migrations.SeparateDatabaseAndState(
            state_operations=[
                migrations.CreateModel(
                    name='ProcessingTask',
                    fields=[
                        ('task_id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                        ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                        ('task_type', models.CharField(choices=[('payee_lookup', 'Payee Lookup'), ('classification', 'Classification')], max_length=20)),
                        ('created_at', models.DateTimeField(auto_now_add=True)),
                        ('updated_at', models.DateTimeField(auto_now=True)),
                        ('transaction_count', models.IntegerField()),
                        ('processed_count', models.IntegerField(default=0)),
                        ('error_count', models.IntegerField(default=0)),
                        ('error_details', models.JSONField(default=dict)),
                        ('task_metadata', models.JSONField(default=dict)),
                        ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='profiles.businessprofile')),
                        ('transactions', models.ManyToManyField(related_name='processing_tasks', to='profiles.transaction')),
                    ],
                ),
            ],
        ),
        migrations.RunSQL(
            sql="\n                DO $$\n                BEGIN\n                    IF NOT EXISTS (\n                        SELECT 1 FROM information_schema.columns \n                        WHERE table_name = 'profiles_transaction' \n                        AND column_name = 'classification_type'\n                    ) THEN\n                        ALTER TABLE profiles_transaction \n                        ADD COLUMN classification_type varchar(50) NULL;\n                    END IF;\n\n                    IF NOT EXISTS (\n                        SELECT 1 FROM information_schema.columns \n                        WHERE table_name = 'profiles_transaction' \n                        AND column_name = 'worksheet'\n                    ) THEN\n                        ALTER TABLE profiles_transaction \n                        ADD COLUMN worksheet varchar(50) NULL;\n                    END IF;\n\n                    IF NOT EXISTS (\n                        SELECT 1 FROM information_schema.columns \n                        WHERE table_name = 'profiles_transaction' \n                        AND column_name = 'business_percentage'\n                    ) THEN\n                        ALTER TABLE profiles_transaction \n                        ADD COLUMN business_percentage integer NOT NULL DEFAULT 100;\n                    END IF;\n\n                    IF NOT EXISTS (\n                        SELECT 1 FROM information_schema.columns \n                        WHERE table_name = 'profiles_transaction' \n                        AND column_name = 'classification_method'\n                    ) THEN\n                        ALTER TABLE profiles_transaction \n                        ADD COLUMN classification_method varchar(20) NULL;\n                    END IF;\n\n                    IF NOT EXISTS (\n                        SELECT 1 FROM information_schema.columns \n                        WHERE table_name = 'profiles_transaction' \n                        AND column_name = 'payee_extraction_method'\n                    ) THEN\n                        ALTER TABLE profiles_transaction \n                        ADD COLUMN payee_extraction_method varchar(20) NULL;\n                    END IF;\n                END $$;\n            ",
            reverse_sql='\n                ALTER TABLE profiles_transaction \n                DROP COLUMN IF EXISTS classification_type,\n                DROP COLUMN IF EXISTS worksheet,\n                DROP COLUMN IF EXISTS business_percentage,\n                DROP COLUMN IF EXISTS classification_method,\n                DROP COLUMN IF EXISTS payee_extraction_method;\n            ',
        ),
        migrations.CreateModel(
            name='ClassificationOverride',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('new_classification_type', models.CharField(max_length=50)),
                ('new_worksheet', models.CharField(max_length=50)),
                ('notes', models.TextField(blank=True)),
                ('created_by', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='classification_overrides', to='profiles.transaction')),
            ],
            options={
                'ordering': ['-created_at'],
                'verbose_name': 'Classification Override',
                'verbose_name_plural': 'Classification Overrides',
            },
        ),
        migrations.AlterModelOptions(
            name='irsexpensecategory',
            options={'ordering': ['worksheet', 'line_number']},
        ),
        migrations.AlterModelOptions(
            name='irsworksheet',
            options={},
        ),
        migrations.AlterModelOptions(
            name='transaction',
            options={},
        ),
        migrations.RemoveField(
            model_name='businessprofile',
            name='common_business_expenses',
        ),
        migrations.RemoveField(
            model_name='businessprofile',
            name='custom_6A_expense_categories',
        ),
        migrations.RemoveField(
            model_name='businessprofile',
            name='generated_profile',
        ),
        migrations.RemoveField(
            model_name='businessprofile',
            name='location',
        ),
        migrations.RemoveField(
            model_name='processingtask',
            name='transactions',
        ),
        migrations.AlterField(
            model_name='clientexpensecategory',
            name='client',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='client_expense_categories', to='profiles.businessprofile'),
        ),
        migrations.AlterField(
            model_name='irsexpensecategory',
            name='description',
            field=models.TextField(),
        ),
        migrations.AlterField(
            model_name='irsexpensecategory',
            name='line_number',
            field=models.CharField(help_text='Line number on the IRS form', max_length=50),
        ),
        migrations.AlterField(
            model_name='irsexpensecategory',
            name='worksheet',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='profiles.irsworksheet'),
        ),
        migrations.AlterField(
            model_name='irsworksheet',
            name='description',
            field=models.TextField(),
        ),
        migrations.AlterField(
            model_name='irsworksheet',
            name='name',
            field=models.CharField(max_length=50, unique=True),
        ),
        migrations.RunPython(
            code=profiles.migrations.0052_alter_classificationoverride_options_and_more.set_default_classification_method,
        ),
        migrations.AlterField(
            model_name='transaction',
            name='classification_method',
            field=models.CharField(choices=[('AI', 'AI Classification'), ('Human', 'Human Override'), ('None', 'Not Processed')], default='None', help_text='Method used to classify the transaction', max_length=20),
        ),
        migrations.AlterField(
            model_name='transaction',
            name='payee_extraction_method',
            field=models.CharField(choices=[('AI', 'AI Only'), ('AI+Search', 'AI with Search'), ('Human', 'Human Override'), ('None', 'Not Processed')], default='None', help_text='Method used to extract the payee information', max_length=20),
        ),
        migrations.CreateModel(
            name='SearchResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query', models.CharField(max_length=255)),
                ('title', models.CharField(max_length=255)),
                ('url', models.URLField()),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('source', models.CharField(default='searxng', max_length=50)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['query'], name='profiles_se_query_b19cd4_idx'), models.Index(fields=['created_at'], name='profiles_se_created_dab3a6_idx')],
            },
        ),
        migrations.RenameField(
            model_name='businessprofile',
            old_name='custom_6a_categories',
            new_name='additional_info',
        ),
        migrations.RunSQL(
            sql='\n            ALTER TABLE profiles_businessprofile \n            DROP COLUMN IF EXISTS custom_categories;\n            ',
            reverse_sql="\n            ALTER TABLE profiles_businessprofile \n            ADD COLUMN custom_categories jsonb NOT NULL DEFAULT '{}'::jsonb;\n            ",
        ),
        migrations.RenameField(
            model_name='businessprofile',
            old_name='profile_data',
            new_name='custom_categories',
        ),
        migrations.AddField(
            model_name='processingtask',
            name='transactions',
            field=models.ManyToManyField(related_name='processing_tasks', to='profiles.transaction'),
        ),
        migrations.RunSQL(
            sql='\n            ALTER TABLE profiles_transaction \n            ADD COLUMN normalized_description text NULL;\n            ',
            reverse_sql='\n            ALTER TABLE profiles_transaction \n            DROP COLUMN IF EXISTS normalized_description;\n            ',
        ),
        migrations.RunSQL(
            sql='\n            ALTER TABLE profiles_transaction \n            ADD COLUMN IF NOT EXISTS confidence varchar(50) NULL,\n            ADD COLUMN IF NOT EXISTS reasoning text NULL,\n            ADD COLUMN IF NOT EXISTS business_context text NULL,\n            ADD COLUMN IF NOT EXISTS questions text NULL;\n            ',
            reverse_sql='\n            ALTER TABLE profiles_transaction \n            DROP COLUMN IF EXISTS confidence,\n            DROP COLUMN IF EXISTS reasoning,\n            DROP COLUMN IF EXISTS business_context,\n            DROP COLUMN IF EXISTS questions;\n            ',
        ),
        migrations.RunPython(
            code=profiles.migrations.0057_update_realtor_categories.update_categories,
            reverse_code=profiles.migrations.0057_update_realtor_categories.reverse_categories,
        ),
    ]
