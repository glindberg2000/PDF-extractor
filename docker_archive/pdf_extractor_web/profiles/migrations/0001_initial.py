# Generated by Django 5.2 on 2025-04-18 02:15

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="BusinessProfile",
            fields=[
                (
                    "client_id",
                    models.CharField(max_length=255, primary_key=True, serialize=False),
                ),
                ("business_type", models.TextField(blank=True, null=True)),
                ("business_description", models.TextField(blank=True, null=True)),
                ("contact_info", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("common_expenses", models.JSONField(default=dict)),
                ("custom_categories", models.JSONField(default=dict)),
                ("industry_keywords", models.JSONField(default=dict)),
                ("category_patterns", models.JSONField(default=dict)),
                ("additional_info", models.JSONField(default=dict)),
            ],
        ),
        migrations.CreateModel(
            name="IRSWorksheet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                ("description", models.TextField()),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="LLMConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("provider", models.CharField(max_length=255)),
                ("model", models.CharField(max_length=255, unique=True)),
                ("url", models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Tool",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("module_path", models.CharField(max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Transaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("transaction_date", models.DateField()),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("description", models.TextField()),
                ("category", models.CharField(blank=True, max_length=255, null=True)),
                ("parsed_data", models.JSONField(default=dict, blank=True)),
                ("file_path", models.CharField(blank=True, max_length=255, null=True)),
                ("source", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "transaction_type",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "normalized_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("statement_start_date", models.DateField(blank=True, null=True)),
                ("statement_end_date", models.DateField(blank=True, null=True)),
                (
                    "account_number",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("transaction_id", models.IntegerField(unique=True, null=True)),
                ("normalized_description", models.TextField(blank=True, null=True)),
                ("payee", models.CharField(blank=True, max_length=255, null=True)),
                ("confidence", models.CharField(blank=True, max_length=50, null=True)),
                ("reasoning", models.TextField(blank=True, null=True)),
                ("payee_reasoning", models.TextField(blank=True, null=True)),
                ("business_context", models.TextField(blank=True, null=True)),
                ("questions", models.TextField(blank=True, null=True)),
                (
                    "classification_type",
                    models.CharField(
                        blank=True,
                        help_text='Type of classification (e.g., "business", "personal")',
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "worksheet",
                    models.CharField(
                        blank=True,
                        help_text='Tax worksheet category (e.g., "6A", "Auto", "HomeOffice")',
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "business_percentage",
                    models.IntegerField(
                        default=100,
                        help_text="Percentage of the transaction that is business-related",
                    ),
                ),
                (
                    "payee_extraction_method",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("AI", "AI Only"),
                            ("AI+Search", "AI with Search"),
                            ("Human", "Human Override"),
                            ("None", "Not Processed"),
                        ],
                        default=None,
                        help_text="Method used to extract the payee information",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "classification_method",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("AI", "AI Classification"),
                            ("Human", "Human Override"),
                            ("None", "Not Processed"),
                        ],
                        default=None,
                        help_text="Method used to classify the transaction",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transactions",
                        to="profiles.businessprofile",
                    ),
                ),
            ],
            options={
                "constraints": [
                    models.UniqueConstraint(
                        fields=["client", "transaction_id"], name="unique_transaction"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="TransactionClassification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "classification_type",
                    models.CharField(
                        help_text='Type of classification (e.g., "business", "personal")',
                        max_length=50,
                    ),
                ),
                (
                    "worksheet",
                    models.CharField(
                        help_text='Tax worksheet category (e.g., "6A", "Auto", "HomeOffice")',
                        max_length=50,
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        blank=True,
                        help_text="Specific expense category within the worksheet",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "business_percentage",
                    models.IntegerField(
                        default=100,
                        help_text="Percentage of the transaction that is business-related",
                    ),
                ),
                (
                    "confidence",
                    models.CharField(
                        help_text="Confidence level of the classification",
                        max_length=20,
                    ),
                ),
                (
                    "reasoning",
                    models.TextField(
                        help_text="Explanation for the classification decision"
                    ),
                ),
                (
                    "created_by",
                    models.CharField(
                        help_text="Agent or user who created this classification",
                        max_length=100,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this is the current active classification",
                    ),
                ),
                (
                    "transaction",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="classifications",
                        to="profiles.transaction",
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["transaction", "created_at"],
                        name="profiles_tr_transac_002390_idx",
                    ),
                    models.Index(
                        fields=["transaction", "is_active"],
                        name="profiles_tr_transac_a4259e_idx",
                    ),
                    models.Index(
                        fields=["classification_type"],
                        name="profiles_tr_classif_da697e_idx",
                    ),
                    models.Index(
                        fields=["worksheet"], name="profiles_tr_workshe_cd2bdb_idx"
                    ),
                ],
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ProcessingTask",
            fields=[
                (
                    "task_id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "task_type",
                    models.CharField(
                        choices=[
                            ("payee_lookup", "Payee Lookup"),
                            ("classification", "Classification"),
                        ],
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("transaction_count", models.IntegerField()),
                ("processed_count", models.IntegerField(default=0)),
                ("error_count", models.IntegerField(default=0)),
                ("error_details", models.JSONField(default=dict)),
                ("task_metadata", models.JSONField(default=dict)),
                (
                    "client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="profiles.businessprofile",
                    ),
                ),
                (
                    "transactions",
                    models.ManyToManyField(
                        related_name="processing_tasks", to="profiles.transaction"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="NormalizedVendorData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("normalized_name", models.CharField(max_length=255)),
                ("normalized_description", models.TextField(blank=True, null=True)),
                ("justification", models.TextField(blank=True, null=True)),
                ("confidence", models.DecimalField(decimal_places=2, max_digits=5)),
                (
                    "transaction",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="normalized_data",
                        to="profiles.transaction",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="IRSExpenseCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField()),
                (
                    "line_number",
                    models.CharField(
                        help_text="Line number on the IRS form", max_length=50
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "worksheet",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="categories",
                        to="profiles.irsworksheet",
                    ),
                ),
            ],
            options={
                "unique_together": {("worksheet", "name")},
                "ordering": ["worksheet", "line_number"],
            },
        ),
        migrations.CreateModel(
            name="ClientExpenseCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("category_name", models.CharField(max_length=255)),
                (
                    "category_type",
                    models.CharField(
                        choices=[
                            ("other_expense", "Other Expense"),
                            ("custom_category", "Custom Category"),
                        ],
                        max_length=50,
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                ("tax_year", models.IntegerField()),
                (
                    "worksheet",
                    models.CharField(
                        choices=[
                            ("6A", "6A"),
                            ("Auto", "Auto"),
                            ("HomeOffice", "HomeOffice"),
                            ("Personal", "Personal"),
                            ("None", "None"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "parent_category",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("line_number", models.CharField(blank=True, max_length=50, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="client_expense_categories",
                        to="profiles.businessprofile",
                    ),
                ),
            ],
            options={
                "constraints": [
                    models.UniqueConstraint(
                        fields=["client", "category_name", "tax_year"],
                        name="unique_client_category_year",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="ClassificationOverride",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "new_classification_type",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "new_worksheet",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("notes", models.TextField(blank=True)),
                ("created_by", models.CharField(blank=True, max_length=255, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "transaction",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="classification_overrides",
                        to="profiles.transaction",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "verbose_name": "Classification Override",
                "verbose_name_plural": "Classification Overrides",
            },
        ),
        migrations.CreateModel(
            name="BusinessExpenseCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("category_name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "tax_year",
                    models.IntegerField(help_text="Tax year this category applies to"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "business",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="business_expense_categories",
                        to="profiles.businessprofile",
                    ),
                ),
                (
                    "parent_category",
                    models.ForeignKey(
                        blank=True,
                        help_text='The IRS category this maps to (e.g., "Other Expenses" on 6A)',
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="profiles.irsexpensecategory",
                    ),
                ),
                (
                    "worksheet",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="business_categories",
                        to="profiles.irsworksheet",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Business Expense Categories",
                "unique_together": {("business", "category_name")},
            },
        ),
        migrations.CreateModel(
            name="Agent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("purpose", models.TextField()),
                ("prompt", models.TextField()),
                (
                    "llm",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="agents",
                        to="profiles.llmconfig",
                    ),
                ),
                (
                    "tools",
                    models.ManyToManyField(
                        blank=True, related_name="agents", to="profiles.tool"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SearchResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("query", models.CharField(max_length=255)),
                ("title", models.CharField(max_length=255)),
                ("url", models.URLField()),
                ("content", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("source", models.CharField(default="searxng", max_length=50)),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(fields=["query"], name="profiles_se_query_b19cd4_idx"),
                    models.Index(
                        fields=["created_at"], name="profiles_se_created_dab3a6_idx"
                    ),
                ],
            },
        ),
    ]
