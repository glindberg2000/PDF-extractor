# Task ID: 23
# Title: Register Parser in Framework
# Status: done
# Dependencies: 13, 20, 22
# Priority: medium
# Description: Register the CapitalOne Visa print statement parser in the parser registry and CLI interfaces.
# Details:
Register the new parser in any relevant parser registries or CLI interfaces. Update the parser factory or registry to include the new parser type. Ensure the parser can be invoked through the existing command-line interface or API.

```python
# Example registration in a parser registry (implementation details may vary)

# In dataextractai/parsers/__init__.py or similar registry file
from dataextractai.parsers.capitalone_visa_print_parser import CapitalOneVisaPrintParser

# Update the parser registry dictionary
PARSER_REGISTRY = {
    # ... existing parsers ...
    'capitalone_visa_print': CapitalOneVisaPrintParser,
}

# If there's a parser factory function, update it
def get_parser(parser_type, *args, **kwargs):
    """Factory function to get the appropriate parser"""
    if parser_type not in PARSER_REGISTRY:
        raise ValueError(f"Unknown parser type: {parser_type}")
    
    return PARSER_REGISTRY[parser_type](*args, **kwargs)

# If there's a CLI, update the command-line argument parser
'''
In the CLI module:

parser.add_argument('--type', choices=list(PARSER_REGISTRY.keys()), 
                    help='Type of statement to parse')
'''
```

# Test Strategy:
Verify that the parser is correctly registered in the system. Test that the parser can be instantiated through the factory function or registry. Check that the parser can be invoked through the command-line interface with the appropriate type argument.
